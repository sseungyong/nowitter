{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","alt","autoFocus","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","myNweets","setMyNweets","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","where","get","myNweetsArray","getMyNweets","signOut","push","AppRouter","isLoggedIn","exact","path","expact","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e161910.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n        // create account\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n        // log in\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\n    if (ok) {\n      await dbService.doc(`tweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`tweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      <h4>{nweetObj.text}</h4>\n      {nweetObj.attachmentUrl && (\n        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"\" />\n      )}\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your tweet\"\n                  value={newNweet}\n                  onChange={onChange}\n                  required\n                  autoFocus\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{newNweet.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt=\"\" />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (nweet === \"\") {\n      return;\n    }\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\"); // upload to storage\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"tweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","import Nweet from \"components/Nweet\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"tweets\")\n      .orderBy(\"createAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const nweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNweets(nweetArray);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Nweet from \"components/Nweet\";\n\nexport default ({ userObj, refreshUser }) => {\n  const [myNweets, setMyNweets] = useState([]);\n  // const currentDisplayName = userObj.displayName ? userObj.displayName : \"noname\";\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  useEffect(\n    () => {\n      const getMyNweets = async () => {\n        const nweets = await dbService\n          .collection(\"tweets\")\n          .orderBy(\"createAt\")\n          .where(\"creatorId\", \"==\", userObj.uid)\n          .get();\n        const myNweetsArray = nweets.docs.map((doc) => doc.data());\n        setMyNweets(myNweetsArray);\n      };\n      getMyNweets();\n    }, // eslint-disable-next-line\n    []\n  );\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10 }} />\n      </form>\n      <div>\n        <div style={{ marginTop: 30 }}>My Tweets</div>\n        <div className=\"myNweets\">\n          {myNweets.map((nweet) => (\n            <Nweet\n              key={nweet.createAt}\n              nweetObj={nweet}\n              isOwner={nweet.creatorId === userObj.uid}\n            />\n          ))}\n        </div>\n      </div>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      {isLoggedIn ? (\n        <>\n          <div className=\"router\">\n            <Route exact path=\"/\">\n              <Home userObj={userObj}></Home>\n            </Route>\n            <Route expact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser}></Profile>\n            </Route>\n          </div>\n        </>\n      ) : (\n        <Route exact path=\"/\">\n          <Auth></Auth>\n        </Route>\n      )}\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n        //   setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; Nowitter {new Date().getFullYear()}</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}